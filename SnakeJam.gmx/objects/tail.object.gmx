<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>circle_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>parent=noone;
myplayer=0;
child=noone;
cooldown=1.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(parent)) {

    if (point_distance(x,y,parent.x,parent.y)&gt;40) {
        dir=point_direction(x,y,parent.x, parent.y);
        dist=min(6, point_distance(x,y,parent.x,parent.y)-40);
        x+=lengthdir_x(dist, dir);
        y+=lengthdir_y(dist, dir);
    }

    myplayer=parent.myplayer;
    
    joyU=joystick_upos(parent.myplayer);
    joyR=joystick_rpos(parent.myplayer);
    beamThreshold=point_distance(0,0,joyU, joyR);
    if (beamThreshold&gt;=0.5 &amp;&amp; alarm[0]&lt;=0) {
        alarm[0]=room_speed*cooldown;
        angle=point_direction(0,0,joyU,joyR);
    
        with (instance_create(x, y, beam)) {
            image_blend=other.image_blend;
            angle=other.angle;
            parent=other.id;
            x=parent.x+lengthdir_x(16, angle);
            y=parent.y+lengthdir_y(16, angle);
            image_angle=angle;
        }
    }
}

x=median(16, room_width-16, x);
y=median(16, room_height-16, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if (instance_exists(parent)) {
  image_xscale=parent.image_xscale*0.85;
  image_yscale=parent.image_yscale*0.85;
  image_blend=merge_color(parent.image_blend, c_black, 0.15);
  if (color_get_value(image_blend)&lt;80) {
    image_blend=parent.image_blend;
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
